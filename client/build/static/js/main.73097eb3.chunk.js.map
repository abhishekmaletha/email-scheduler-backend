{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Scheduler.js","components/Login.js","components/History.js","components/PrivateRoute.js","components/App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","provider","GoogleAuthProvider","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","loginWithGoogle","signInWithPopup","logout","signOut","Provider","Signup","error","setError","emailRef","useRef","passwordRef","passwordConfirmRef","history","useHistory","e","a","preventDefault","current","URL","options","method","headers","body","JSON","stringify","name","userEmail","emailList","histories","fetch","res","json","response","console","log","push","Card","style","maxWidth","className","Body","Alert","variant","Form","onSubmit","Group","id","Label","Control","type","ref","required","Button","disabled","to","Scheduler","html","setHtml","recurring20","recurring30","week","month","year","check","setCheck","weekDT","setWeekDT","monthDT","setMonthDT","yearDT","setYearDT","records","setRecords","toRef","ccRef","subjectRef","handleCheckChange","checkbox","target","prev","curr","checked","then","data","reverse","catch","err","scheduledEmail","sendToEmail","ccEmail","title","recurring","schedule","dateAndTime","Date","repeat","placeholder","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","wrapperClassName","editorClassName","toolbarClassName","onChange","htmlFor","TextField","defaultValue","InputLabelProps","shrink","Table","striped","bordered","hover","map","record","index","row","onClick","Login","History","timePosted","PrivateRoute","Component","component","rest","render","props","App","Container","minHeight","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.73097eb3.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n});\r\n\r\nexport const auth = app.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport default app;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { auth, provider } from '../firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function signup(email, password) {\r\n    return auth.createUserWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function login(email, password) {\r\n    return auth.signInWithEmailAndPassword(email, password);\r\n  }\r\n\r\n  function loginWithGoogle() {\r\n    return auth.signInWithPopup(provider);\r\n  }\r\n\r\n  function logout() {\r\n    return auth.signOut();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    loginWithGoogle,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function Signup() {\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const history = useHistory();\r\n  const { signup } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError('Passwords do not match');\r\n    }\r\n\r\n    try {\r\n      const URL = '/api/user';\r\n\r\n      setError('');\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: 'Randi Zuckerberg',\r\n          userEmail: emailRef.current.value,\r\n          emailList: [],\r\n          histories: [],\r\n        }),\r\n      };\r\n      const res = await fetch(`${URL}`, options);\r\n      const response = await res.json();\r\n      console.log(response);\r\n      history.push('/');\r\n    } catch {\r\n      setError('Failed to create an account');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ maxWidth: '400px' }} className='w-100'>\r\n        <Card.Body>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <h2 className='text-center mb-4'>Sign Up</h2>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email' className='mb-3'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='password' className='mb-3'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='password-confirm' className='mb-3'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className='w-100' type='submit'>\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Already have an account? <Link to='/login'>Log In</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Card, Button, Alert, Form, Table } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { convertToRaw } from 'draft-js';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nfunction row(record, index) {\r\n  return (\r\n    <tr key={index}>\r\n      <td>{record.sendToEmail[0]}</td>\r\n      <td>{record.ccEmail[0]}</td>\r\n      <td>{record.title}</td>\r\n      <td>{record.body}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default function Scheduler() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [html, setHtml] = useState('');\r\n  const [check, setCheck] = useState({\r\n    recurring20: false,\r\n    recurring30: false,\r\n    week: false,\r\n    month: false,\r\n    year: false,\r\n  });\r\n  const [weekDT, setWeekDT] = useState('2021-06-28T10:30');\r\n  const [monthDT, setMonthDT] = useState('2021-06-28T10:30');\r\n  const [yearDT, setYearDT] = useState('2021-06-28T10:30');\r\n  const [records, setRecords] = useState([]);\r\n\r\n  const toRef = useRef();\r\n  const ccRef = useRef();\r\n  const subjectRef = useRef();\r\n\r\n  const { currentUser, logout } = useAuth();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const URL = '/api/getEmails';\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ userEmail: currentUser.email }),\r\n    };\r\n    fetch(`${URL}`, options)\r\n      .then((res) => res.json())\r\n      .then((res) => setRecords(res.data[0]?.emailList.reverse()))\r\n      .catch((err) => console.log(err));\r\n  }, [currentUser, loading]);\r\n\r\n  async function handleLogout() {\r\n    setError('');\r\n\r\n    setLoading(true);\r\n    try {\r\n      await logout();\r\n      history.push('/login');\r\n    } catch {\r\n      setError('Failed to log out');\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    setLoading(true);\r\n\r\n    if (\r\n      !check.recurring20 &&\r\n      !check.recurring30 &&\r\n      !check.week &&\r\n      !check.month &&\r\n      !check.year\r\n    ) {\r\n      setError('You must select at least one scheduled format');\r\n      return;\r\n    }\r\n\r\n    let scheduledEmail = {\r\n      userEmail: currentUser.email,\r\n      sendToEmail: [toRef.current.value],\r\n      ccEmail: [ccRef.current.value],\r\n      title: subjectRef.current.value,\r\n      body: html,\r\n      recurring: {\r\n        schedule: check.recurring20 || check.recurring30,\r\n        dateAndTime: check.recurring20 ? 20 : 30,\r\n      },\r\n      week: {\r\n        schedule: check.week,\r\n        dateAndTime: new Date(weekDT),\r\n      },\r\n      month: {\r\n        schedule: check.month,\r\n        dateAndTime: new Date(monthDT),\r\n      },\r\n      year: {\r\n        schedule: check.year,\r\n        dateAndTime: new Date(yearDT),\r\n      },\r\n      repeat: 'Vedant bad man',\r\n    };\r\n    const URL = '/api/emails';\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(scheduledEmail),\r\n    };\r\n    fetch(`${URL}`, options)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n  function handleCheckChange(e) {\r\n    const checkbox = e.target.id;\r\n    setCheck((prev) => {\r\n      let curr = prev;\r\n      if (checkbox === 'scheduleRecurring20')\r\n        curr.recurring20 = e.target.checked;\r\n      else if (checkbox === 'scheduleRecurring30')\r\n        curr.recurring30 = e.target.checked;\r\n      else if (checkbox === 'scheduleWeekly') curr.week = e.target.checked;\r\n      else if (checkbox === 'scheduleMonthly') curr.month = e.target.checked;\r\n      else curr.year = e.target.checked;\r\n\r\n      return { ...curr };\r\n    });\r\n  }\r\n  function handleEditorStateChange(e) {\r\n    setHtml(draftToHtml(convertToRaw(e.getCurrentContent())));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card className='w-100'>\r\n        <Card.Body>\r\n          <h2 className='text-center mb-4'>Scheduler</h2>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <strong>Your Email:</strong> {currentUser.email}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='to' className='mb-3'>\r\n              <Form.Label>To</Form.Label>\r\n              <Form.Control type='email' ref={toRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='cc' className='mb-3'>\r\n              <Form.Label>CC</Form.Label>\r\n              <Form.Control type='email' ref={ccRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='subject' className='mb-3'>\r\n              <Form.Label>Subject</Form.Label>\r\n              <Form.Control type='text' ref={subjectRef} required />\r\n            </Form.Group>\r\n            <Editor\r\n              placeholder='Type email content here'\r\n              onEditorStateChange={handleEditorStateChange}\r\n              wrapperClassName='wrapper-class'\r\n              editorClassName='editor-class'\r\n              toolbarClassName='toolbar-class'\r\n            />\r\n            <div className='form-check form-switch mt-3'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='scheduleRecurring20'\r\n                onChange={handleCheckChange}\r\n                disabled={check.recurring30}\r\n              />\r\n              <label className='form-check-label' htmlFor='scheduleRecurring20'>\r\n                Recurring (every 20 seconds)\r\n              </label>\r\n            </div>\r\n            <div className='form-check form-switch mt-3'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='scheduleRecurring30'\r\n                onChange={handleCheckChange}\r\n                disabled={check.recurring20}\r\n              />\r\n              <label className='form-check-label' htmlFor='scheduleRecurring30'>\r\n                Recurring (every 30 seconds)\r\n              </label>\r\n            </div>\r\n            <div className='form-check form-switch mt-3'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='scheduleWeekly'\r\n                onChange={handleCheckChange}\r\n              />\r\n              <label className='form-check-label' htmlFor='scheduleWeekly'>\r\n                Weekly\r\n              </label>\r\n              {check.week && (\r\n                <TextField\r\n                  id='weekDT'\r\n                  type='datetime-local'\r\n                  defaultValue='2021-06-28T10:30'\r\n                  className='ms-2'\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setWeekDT(e.target.value)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className='form-check form-switch mt-3'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='scheduleMonthly'\r\n                onChange={handleCheckChange}\r\n              />\r\n              <label className='form-check-label' htmlFor='scheduleMonthly'>\r\n                Monthly\r\n              </label>\r\n              {check.month && (\r\n                <TextField\r\n                  id='monthDT'\r\n                  type='datetime-local'\r\n                  defaultValue='2021-06-28T10:30'\r\n                  className='ms-2'\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setMonthDT(e.target.value)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className='form-check form-switch mt-3'>\r\n              <input\r\n                className='form-check-input'\r\n                type='checkbox'\r\n                id='scheduleYearly'\r\n                onChange={handleCheckChange}\r\n              />\r\n              <label className='form-check-label' htmlFor='scheduleYearly'>\r\n                Yearly\r\n              </label>\r\n              {check.year && (\r\n                <TextField\r\n                  id='yearDT'\r\n                  type='datetime-local'\r\n                  defaultValue='2021-06-28T10:30'\r\n                  className='ms-2'\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={(e) => setYearDT(e.target.value)}\r\n                />\r\n              )}\r\n            </div>\r\n            <Button\r\n              disabled={loading}\r\n              className='w-100 mb-3 mt-3'\r\n              type='submit'\r\n            >\r\n              Schedule\r\n            </Button>\r\n          </Form>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>To</th>\r\n                <th>CC</th>\r\n                <th>Subject</th>\r\n                <th>Body</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{records.map((record, index) => row(record, index))}</tbody>\r\n          </Table>\r\n          <Link to='/history' className='btn btn-primary w-100 mt-2'>\r\n            See History\r\n          </Link>\r\n        </Card.Body>\r\n        <div className='w-100 text-center mt-2'>\r\n          <Button disabled={loading} variant='link' onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function Login() {\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const history = useHistory();\r\n  const { login, loginWithGoogle } = useAuth();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await login(emailRef.current.value, passwordRef.current.value);\r\n      history.push('/');\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  async function handleGoogleSignIn() {\r\n    try {\r\n      setError('');\r\n      setLoading(true);\r\n      await loginWithGoogle();\r\n      history.push('/');\r\n    } catch {\r\n      setError('Failed to log in');\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card style={{ maxWidth: '400px' }} className='w-100'>\r\n        <Card.Body>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <h2 className='text-center mb-4'>Log in</h2>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id='email' className='mb-3'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='email' ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id='password' className='mb-3'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button disabled={loading} className='w-100 mb-3' type='submit'>\r\n              Log In\r\n            </Button>\r\n          </Form>\r\n\r\n          <Button\r\n            disabled={loading}\r\n            className='w-100'\r\n            onClick={handleGoogleSignIn}\r\n          >\r\n            Log in with Google\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className='w-100 text-center mt-2'>\r\n        Need an account? <Link to='/signup'>Sign up</Link>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Table, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction row(record, index) {\r\n  return (\r\n    <tr key={index}>\r\n      <td>{record.sendToEmail[0]}</td>\r\n      <td>{record.ccEmail[0]}</td>\r\n      <td>{record.title}</td>\r\n      <td>{record.body}</td>\r\n      <td>{record.timePosted}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default function History() {\r\n  const { currentUser, logout } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [records, setRecords] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const URL = '/api/getHistory';\r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ userEmail: currentUser.email }),\r\n    };\r\n    fetch(`${URL}`, options)\r\n      .then((res) => res.json())\r\n      .then((res) => setRecords(res.data[0]?.histories.reverse()))\r\n      .catch((err) => console.log(err));\r\n  }, [currentUser]);\r\n\r\n  async function handleLogout() {\r\n    setError('');\r\n\r\n    setLoading(true);\r\n    try {\r\n      await logout();\r\n      history.push('/login');\r\n    } catch {\r\n      setError('Failed to log out');\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>To</th>\r\n            <th>CC</th>\r\n            <th>Subject</th>\r\n            <th>Body</th>\r\n            <th>Time Posted</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{records.map((record, index) => row(record, index))}</tbody>\r\n      </Table>\r\n      <div className='w-100 text-center mt-2'>\r\n        <Button disabled={loading} variant='link' onClick={handleLogout}>\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        currentUser ? <Component {...props} /> : <Redirect to='/login' />\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Signup from './Signup';\r\nimport { Container } from 'react-bootstrap';\r\nimport { AuthProvider } from '../contexts/AuthContext';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Scheduler from './Scheduler';\r\nimport Login from './Login';\r\nimport History from './History';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <div\r\n        className='w-100 d-flex flex-column align-items-center justify-content-center'\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <Router>\r\n          <AuthProvider>\r\n            <Switch>\r\n              <PrivateRoute exact path='/' component={Scheduler} />\r\n              <PrivateRoute exact path='/history' component={History} />\r\n              <Route exact path='/signup' component={Signup} />\r\n              <Route exact path='/login' component={Login} />\r\n            </Switch>\r\n          </AuthProvider>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}